{"version":3,"sources":["../../src/pages/forgot-pass/forgot-pass.module.ts","../../src/pages/forgot-pass/forgot-pass.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACD;AAU/C,IAAa,oBAAoB,GAAjC;CAAoC;AAAvB,oBAAoB;IARhC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAc;SACf;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,oEAAc,CAAC;SACzC;KACF,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACZS;AAC0B;AACX;AACT;AACS;AAEzD,MAAM,WAAW,GAAG,sEAAsE,CAAC;AAO3F,IAAa,cAAc,GAA3B;IAME,YAAmB,OAAsB,EAAS,SAAoB,EAAU,SAA0B,EAAS,YAA0B;QAA1H,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,cAAS,GAAT,SAAS,CAAiB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAF7I,iBAAY,GAAY,KAAK,CAAC;QAG5B,IAAI,CAAC,SAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAE7F,IAAI,CAAC,cAAc,GAAG,IAAI,iEAAS,CAAC;YAClC,KAAK,EAAE,IAAI,CAAC,SAAS;SACtB,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG;gBAC/C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,OAAO,EAAE,2BAA2B;oBACpC,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,QAAQ;iBACnB,CAAC,CAAC;gBAEH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAE/B,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG;gBACV,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,OAAO,EAAE,GAAG,CAAC,OAAO;oBACpB,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,QAAQ;iBACnB,CAAC,CAAC;gBAEH,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;QACL,CAAC;QAAA,IAAI,CAAC,CAAC;YACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,OAAO,EAAE,uBAAuB;gBAChC,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,QAAQ;aACnB,CAAC,CAAC;YAEH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;IACH,CAAC;CACF;AAlDY,cAAc;IAJ1B,wEAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;OACG;KAChC,CAAC;mBAO6I;AA4C9I;SAlDY,cAAc,gB","file":"20.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ForgotPassPage } from './forgot-pass';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ForgotPassPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ForgotPassPage),\r\n  ],\r\n})\r\nexport class ForgotPassPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/forgot-pass/forgot-pass.module.ts","import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { ToastController } from 'ionic-angular';\r\nimport { AuthProvider } from '../../providers/auth/auth';\r\n\r\nconst EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-forgot-pass',\r\n  templateUrl: 'forgot-pass.html',\r\n})\r\nexport class ForgotPassPage {\r\n  email: string;\r\n  emailCtrl: FormControl;\r\n  forgotPassForm: FormGroup;\r\n  isSubmitting: boolean = false;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, private toastCtrl: ToastController, public authProvider: AuthProvider) {\r\n    this.emailCtrl = new FormControl('', [Validators.required, Validators.pattern(EMAIL_REGEX)]);\r\n\r\n    this.forgotPassForm = new FormGroup({\r\n      email: this.emailCtrl,\r\n    });\r\n  }\r\n\r\n  forgotPasswordSubmit() {\r\n    this.isSubmitting = true;\r\n    if (this.forgotPassForm.valid) {\r\n      this.authProvider.forgotPass(this.email).then(res => {\r\n        this.isSubmitting = false;\r\n        let toast = this.toastCtrl.create({\r\n          message: 'Password reset email sent',\r\n          duration: 5000,\r\n          position: 'bottom'\r\n        });\r\n\r\n        this.email = '';\r\n        this.navCtrl.push('LoginPage');\r\n\r\n        toast.present();\r\n      }).catch(err => {\r\n        this.isSubmitting = false;\r\n        let toast = this.toastCtrl.create({\r\n          message: err.message,\r\n          duration: 5000,\r\n          position: 'bottom'\r\n        });\r\n\r\n        toast.present();\r\n      });\r\n    }else {\r\n      this.isSubmitting = false;\r\n      let toast = this.toastCtrl.create({\r\n        message: 'Invalid email address',\r\n        duration: 4000,\r\n        position: 'bottom'\r\n      });\r\n\r\n      toast.present();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/forgot-pass/forgot-pass.ts"],"sourceRoot":""}